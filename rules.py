# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'rules.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_rules_window(object):
    def setupUi(self, rules_window):
        rules_window.setObjectName("rules_window")
        rules_window.resize(700, 667)
        rules_window.setMinimumSize(QtCore.QSize(700, 600))
        rules_window.setMaximumSize(QtCore.QSize(3000, 3000))
        rules_window.setStyleSheet("background-color: #FFFBCE;\n"
"color: #1E6214;")
        self.gridLayout = QtWidgets.QGridLayout(rules_window)
        self.gridLayout.setObjectName("gridLayout")
        self.label = QtWidgets.QLabel(rules_window)
        self.label.setMaximumSize(QtCore.QSize(16777214, 16777215))
        font = QtGui.QFont()
        font.setFamily("Bitstream Charter")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setStyleSheet("margin:10px")
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.go_menu = QtWidgets.QPushButton(rules_window)
        font = QtGui.QFont()
        font.setFamily("Bitstream Charter")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.go_menu.setFont(font)
        self.go_menu.setStyleSheet("QPushButton{\n"
"background-color:#1E6214;\n"
"color:#FFFBCE;\n"
"margin:10px\n"
"}\n"
"QPushButton:hover{\n"
"background-color:#60C04C;\n"
"color:#1E6214;\n"
"border: 4px solid #60C04C;\n"
"margin:15px\n"
"}")
        self.go_menu.setObjectName("go_menu")
        self.gridLayout.addWidget(self.go_menu, 2, 0, 1, 1)
        self.scrollArea = QtWidgets.QScrollArea(rules_window)
        self.scrollArea.setStyleSheet("padding:10px;\n"
"margin:10px")
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 623, 1287))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_6 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.gridLayout_2.addWidget(self.label_6, 2, 0, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.gridLayout_2.addWidget(self.label_4, 4, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_3.setAlignment(QtCore.Qt.AlignJustify|QtCore.Qt.AlignVCenter)
        self.label_3.setWordWrap(True)
        self.label_3.setObjectName("label_3")
        self.gridLayout_2.addWidget(self.label_3, 1, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setWordWrap(True)
        self.label_2.setObjectName("label_2")
        self.gridLayout_2.addWidget(self.label_2, 0, 0, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_5.setWordWrap(True)
        self.label_5.setObjectName("label_5")
        self.gridLayout_2.addWidget(self.label_5, 5, 0, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.label_7.setWordWrap(True)
        self.label_7.setObjectName("label_7")
        self.gridLayout_2.addWidget(self.label_7, 3, 0, 1, 1)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.gridLayout.addWidget(self.scrollArea, 1, 0, 1, 1)

        self.retranslateUi(rules_window)
        QtCore.QMetaObject.connectSlotsByName(rules_window)

    def retranslateUi(self, rules_window):
        _translate = QtCore.QCoreApplication.translate
        rules_window.setWindowTitle(_translate("rules_window", "Правила"))
        self.label.setText(_translate("rules_window", "Правила"))
        self.go_menu.setText(_translate("rules_window", "Понятно"))
        self.label_6.setText(_translate("rules_window", "ФУНКЦИИ ПРОГРАММЫ"))
        self.label_4.setText(_translate("rules_window", "ЦЕЛЕВАЯ АУДИТОРИЯ"))
        self.label_3.setText(_translate("rules_window", "Симулятор учителя — это инновационная образовательная платформа, созданная для подготовки будущих и поддержки действующих учителей. Программа моделирует реальные педагогические ситуации, предлагая пользователям возможность отрабатывать навыки управления классом, принятия решений и решения конфликтов в безопасной цифровой среде. Симулятор учителя помогает педагогам развивать профессиональные компетенции, минимизируя риски для реальных учеников."))
        self.label_2.setText(_translate("rules_window", "КРАТКОЕ ОПИСАНИЕ"))
        self.label_5.setText(_translate("rules_window", "Разрабатываемое приложение расчитывается на следующие категории пользователей:\n"
"    • Будущие учителя: Студенты педагогических вузов, которым нужна практика перед выходом на работу или те, кто хочет попробовать себя в роли учителя.\n"
"    • Действующие учителя: Педагоги, желающие освежить свои знания или отработать новые стратегии. Опытные специалисты, стремящиеся повысить свою квалификацию.\n"
"    • Руководители школ: Администрация, которая может использовать программу для оценки компетенций учителей.\n"
"    • Родители: Те, кто хочет лучше понять работу учителя и вызовы, с которыми они сталкиваются."))
        self.label_7.setText(_translate("rules_window", "    1. Моделирование ситуаций\n"
"База данных содержит более 10 уникальных сценариев (например, конфликты в групповой работе, плагиат, использование гаджетов, скука на уроках). Каждый сценарий имеет несколько вариантов развития событий.\n"
"    2. Выбор решений\n"
"Пользователь выбирает действия из предложенных вариантов. После каждого выбора программа показывает последствия и объясняет их причины."))
